import React, { useEffect } from "react";
import { fetchBranches } from "../redux/branchesSlice"; // ‚úÖ Import action
import { RootState, AppDispatch } from "../redux/store"; // ‚úÖ Import RootState ƒë·ªÉ l·∫•y d·ªØ li·ªáu t·ª´ Redux

// D√πng hook useSelector ƒë·ªÉ l·∫•y state t·ª´ store.ts c·ªßa Redux v·ªÅ, hook useDispatch ƒë∆∞a d·ªØ li·ªáu l√™n store.ts c·ªßa Redux
import { useSelector, useDispatch } from "react-redux";
import CardList from "../templates/CardList";
import CardItem from "../templates/CardItem";
import { Star, Phone } from "lucide-react";
const BranchesList: React.FC = () => {
	// state c·∫ßn quan t√¢m ·ªü ƒë√¢y l√† m·∫£ng c√°c Branches l·∫•y t·ª´ api
	// Tuy nhi√™n ƒë·ªëi v·ªõi Branches (l·∫•y data t·ª´ call api theo redux) th√¨ d√πng nhi·ªÅu ·ªü components ·ªü c√°c c·∫•p kh√°c nhau, ph·∫£i truy·ªÅn props xu·ªëng n√™n ph·∫£i d√πng hooks useSelector
	// Thay v√¨ d√πng hook useState ƒë·ªÉ qu·∫£n l√Ω state th√¨ d√πng useSelector c·ªßa redux ƒë·ªÉ l·∫•y d·ªØ li·ªáu/qu·∫£n l√Ω state v·ªÅ t·ª´ store.ts c·ªßa Redux
	// const branches = useSelector(state => state.branchesReducer);

	// useDispatch ~~~ setState trong useState,
	// const dispatch = useDispatch();
	const dispatch = useDispatch<AppDispatch>(); // ‚úÖ Khai b√°o dispatch ki·ªÉu AppDispatch

	// ‚úÖ L·∫•y d·ªØ li·ªáu t·ª´ Redux Store
	const branchesList = useSelector(
		(state: RootState) => state.branches.branchesList,
	);
	const loading = useSelector((state: RootState) => state.branches.loading);
	const error = useSelector((state: RootState) => state.branches.error);

	// ‚úÖ G·ªçi API khi component mount
	useEffect(() => {
		dispatch(fetchBranches());
	}, [dispatch]);

	if (loading) return <p>ƒêang t·∫£i d·ªØ li·ªáu...</p>;
	if (error) return <p className="text-red-500">{error}</p>;

	return (
		<>
			<CardList
				title="Branches"
				items={branchesList}
				renderItem={(branch) => (
					<CardItem
						key={branch.id}
						// data={branch}
						name={branch.name}
						address={branch.contact.address}
						img={branch.images}
						category={(() => {
							const today = new Date().toLocaleDateString("en-US", {
								weekday: "long",
							});
							const todayHours = branch.opening_hours.find(
								(item) => item.day === today,
							);
							return todayHours
								? `${today}: ${todayHours.open} - ${todayHours.close}`
								: "Closed";
						})()}
						star={branch.rating}
						vote={branch.rating}
						ratingComponent={
							// <div className="flex items-center gap-4 text-sm my-2">
							// 	<span className=" py-1 rounded-full text-sm">
							// 		{branch.rating} ‚≠ê
							// 	</span>
							// 	<span className="py-1 rounded-full text-sm">
							// 		{branch.contact.phone} üìû
							// 	</span>
							// </div>
							<div className="flex items-center gap-4 text-sm my-2">
								{/* Rating */}
								<div className="flex items-center gap-1 bg-yellow-200 text-yellow-600 px-3 py-1 rounded-full">
									<Star className="w-4 h-4" />
									<span className="font-medium">{branch.rating}</span>
								</div>

								{/* Phone Number */}
								<div className="flex items-center gap-1 bg-blue-100 text-blue-600 px-3 py-1 rounded-full">
									<Phone className="w-4 h-4" />
									<span className="font-medium">{branch.contact.phone}</span>
								</div>
							</div>
						}
					/>
				)}
			/>
		</>
	);
};

export default BranchesList;
